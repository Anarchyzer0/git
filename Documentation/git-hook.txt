git-hook(1)
===========

NAME
----
git-hook - run git hooks

SYNOPSIS
--------
[verse]
'git hook' run [--to-stdin=<path>] [--ignore-missing] [(-j|--jobs) <n>]
	<hook-name> [-- <hook-args>]
'git hook' list <hook-name>

DESCRIPTION
-----------

This command is an interface to git hooks (see linkgit:githooks[5]).
Currently it only provides a convenience wrapper for running hooks for
use by git itself. In the future it might gain other functionality.

It's possible to use this command to refer to hooks which are not native to Git,
for example if a wrapper around Git wishes to expose hooks into its own
operation in a way which is already familiar to Git users. However, wrappers
invoking such hooks should be careful to name their hook events something which
Git is unlikely to use for a native hook later on. For example, Git is much less
likely to create a `mytool-validate-commit` hook than it is to create a
`validate-commit` hook.

SUBCOMMANDS
-----------

run::
	Run the `<hook-name>` hook. See linkgit:githooks[5] for
	the hook names we support.
+
Any positional arguments to the hook should be passed after an
optional `--` (or `--end-of-options`, see linkgit:gitcli[7]). The
arguments (if any) differ by hook name, see linkgit:githooks[5] for
what those are.

list::
	Print a list of hooks which will be run on `<hook-name>` event. If no
	hooks are configured for that event, print nothing and return 1.

OPTIONS
-------

--to-stdin::
	For "run"; Specify a file which will be streamed into the
	hook's stdin. The hook will receive the entire file from
	beginning to EOF.

--ignore-missing::
	Ignore any missing hook by quietly returning zero. Used for
	tools that want to do a blind one-shot run of a hook that may
	or may not be present.

-j::
--jobs::
	Only valid for `run`.
+
Specify how many hooks to run simultaneously. If this flag is not specified, use
the value of the `hook.jobs` config. If the config is not specified, use the
number of CPUs on the current system. Some hooks may be ineligible for
parallelization: for example, 'commit-msg' intends hooks modify the commit
message body and cannot be parallelized.

CONFIGURATION
-------------
include::config/hook.txt[]

SEE ALSO
--------
linkgit:githooks[5]

GIT
---
Part of the linkgit:git[1] suite
